(program
  (let
    (nonrec)
    (datatypebind
      (datatype
        (tyvardecl Bool (type))

        Bool_match
        (vardecl True Bool) (vardecl False Bool)
      )
    )
    (termbind
      (strict)
      (vardecl nandDirect (fun Bool (fun Bool Bool)))
      (lam
        ds
        Bool
        (lam
          ds
          Bool
          [
            [ { [ Bool_match ds ] Bool } (lam p (prod ) False) ]
            (lam
              p
              (prod )
              [
                [ { [ Bool_match ds ] Bool } (lam p (prod ) False) ]
                (lam p (prod ) True)
              ]
            )
          ]
        )
      )
    )
    (termbind
      (strict)
      (vardecl andDirect (fun Bool (fun Bool Bool)))
      (lam
        ds
        Bool
        (lam
          ds
          Bool
          [ [ nandDirect [ [ nandDirect ds ] ds ] ] [ [ nandDirect ds ] ds ] ]
        )
      )
    )
    [ [ andDirect True ] False ]
  )
)