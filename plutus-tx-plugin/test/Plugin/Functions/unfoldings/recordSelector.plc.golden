(program
  (let
    (nonrec)
    (datatypebind
      (datatype
        (tyvardecl MyMonoRecord (type))

        MyMonoRecord_match
        (vardecl
          MyMonoRecord (fun (con integer) (fun (con integer) MyMonoRecord))
        )
      )
    )
    (termbind
      (strict)
      (vardecl mrA (fun MyMonoRecord (con integer)))
      (lam
        ds
        MyMonoRecord
        [
          { [ MyMonoRecord_match ds ] (con integer) }
          (lam
            p
            (prod (con integer) (con integer))
            (let
              (nonrec)
              (termbind (strict) (vardecl ds (con integer)) (proj 0 p))
              (termbind (strict) (vardecl ds (con integer)) (proj 1 p))
              ds
            )
          )
        ]
      )
    )
    mrA
  )
)