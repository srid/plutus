(program
  (let
    (nonrec)
    (datatypebind
      (datatype
        (tyvardecl UTuple2 (fun (type) (fun (type) (type))))
        (tyvardecl a (type)) (tyvardecl b (type))
        UTuple2_match
        (vardecl UTuple2 (fun a (fun b [ [ UTuple2 a ] b ])))
      )
    )
    (datatypebind
      (datatype
        (tyvardecl
          UTuple5
          (fun
            (type) (fun (type) (fun (type) (fun (type) (fun (type) (type)))))
          )
        )
        (tyvardecl a (type))
        (tyvardecl b (type))
        (tyvardecl c (type))
        (tyvardecl d (type))
        (tyvardecl e (type))
        UTuple5_match
        (vardecl
          UTuple5
          (fun
            a
            (fun
              b (fun c (fun d (fun e [ [ [ [ [ UTuple5 a ] b ] c ] d ] e ])))
            )
          )
        )
      )
    )
    (termbind
      (strict)
      (vardecl addInteger (fun (con integer) (fun (con integer) (con integer))))
      (builtin addInteger)
    )
    (termbind
      (strict)
      (vardecl addInteger (fun (con integer) (fun (con integer) (con integer))))
      (lam x (con integer) (lam y (con integer) [ [ addInteger x ] y ]))
    )
    (termbind
      (strict)
      (vardecl
        unboxedTuple
        (fun
          [
            [
              [ [ [ UTuple5 (con integer) ] (con integer) ] (con integer) ]
              (con integer)
            ]
            (con integer)
          ]
          (con integer)
        )
      )
      (lam
        ds
        [
          [
            [ [ [ UTuple5 (con integer) ] (con integer) ] (con integer) ]
            (con integer)
          ]
          (con integer)
        ]
        [
          {
            [
              {
                {
                  {
                    { { UTuple5_match (con integer) } (con integer) }
                    (con integer)
                  }
                  (con integer)
                }
                (con integer)
              }
              ds
            ]
            (con integer)
          }
          (lam
            p
            (prod
              (con integer)
              (con integer)
              (con integer)
              (con integer)
              (con integer)
            )
            (let
              (nonrec)
              (termbind (strict) (vardecl i (con integer)) (proj 0 p))
              (termbind (strict) (vardecl j (con integer)) (proj 1 p))
              (termbind (strict) (vardecl k (con integer)) (proj 2 p))
              (termbind (strict) (vardecl l (con integer)) (proj 3 p))
              (termbind (strict) (vardecl m (con integer)) (proj 4 p))
              [
                [
                  addInteger
                  [
                    [ addInteger [ [ addInteger [ [ addInteger i ] j ] ] k ] ] l
                  ]
                ]
                m
              ]
            )
          )
        ]
      )
    )
    (termbind
      (strict)
      (vardecl
        unboxedTuples2Tuple
        (fun
          [
            [
              UTuple2
              [
                [
                  [ [ [ UTuple5 (con integer) ] (con integer) ] (con integer) ]
                  (con integer)
                ]
                (con integer)
              ]
            ]
            [
              [
                [ [ [ UTuple5 (con integer) ] (con integer) ] (con integer) ]
                (con integer)
              ]
              (con integer)
            ]
          ]
          (con integer)
        )
      )
      (lam
        ds
        [
          [
            UTuple2
            [
              [
                [ [ [ UTuple5 (con integer) ] (con integer) ] (con integer) ]
                (con integer)
              ]
              (con integer)
            ]
          ]
          [
            [
              [ [ [ UTuple5 (con integer) ] (con integer) ] (con integer) ]
              (con integer)
            ]
            (con integer)
          ]
        ]
        [
          {
            [
              {
                {
                  UTuple2_match
                  [
                    [
                      [
                        [ [ UTuple5 (con integer) ] (con integer) ]
                        (con integer)
                      ]
                      (con integer)
                    ]
                    (con integer)
                  ]
                }
                [
                  [
                    [
                      [ [ UTuple5 (con integer) ] (con integer) ] (con integer)
                    ]
                    (con integer)
                  ]
                  (con integer)
                ]
              }
              ds
            ]
            (con integer)
          }
          (lam
            p
            (prod
              [
                [
                  [ [ [ UTuple5 (con integer) ] (con integer) ] (con integer) ]
                  (con integer)
                ]
                (con integer)
              ]
              [
                [
                  [ [ [ UTuple5 (con integer) ] (con integer) ] (con integer) ]
                  (con integer)
                ]
                (con integer)
              ]
            )
            (let
              (nonrec)
              (termbind
                (strict)
                (vardecl
                  i
                  [
                    [
                      [
                        [ [ UTuple5 (con integer) ] (con integer) ]
                        (con integer)
                      ]
                      (con integer)
                    ]
                    (con integer)
                  ]
                )
                (proj 0 p)
              )
              (termbind
                (strict)
                (vardecl
                  j
                  [
                    [
                      [
                        [ [ UTuple5 (con integer) ] (con integer) ]
                        (con integer)
                      ]
                      (con integer)
                    ]
                    (con integer)
                  ]
                )
                (proj 1 p)
              )
              [ [ addInteger [ unboxedTuple i ] ] [ unboxedTuple j ] ]
            )
          )
        ]
      )
    )
    (lam
      x
      (con integer)
      [
        unboxedTuples2Tuple
        [
          [
            {
              {
                UTuple2
                [
                  [
                    [
                      [ [ UTuple5 (con integer) ] (con integer) ] (con integer)
                    ]
                    (con integer)
                  ]
                  (con integer)
                ]
              }
              [
                [
                  [ [ [ UTuple5 (con integer) ] (con integer) ] (con integer) ]
                  (con integer)
                ]
                (con integer)
              ]
            }
            [
              [
                [
                  [
                    [
                      {
                        {
                          {
                            { { UTuple5 (con integer) } (con integer) }
                            (con integer)
                          }
                          (con integer)
                        }
                        (con integer)
                      }
                      x
                    ]
                    x
                  ]
                  x
                ]
                x
              ]
              x
            ]
          ]
          [
            [
              [
                [
                  [
                    {
                      {
                        {
                          { { UTuple5 (con integer) } (con integer) }
                          (con integer)
                        }
                        (con integer)
                      }
                      (con integer)
                    }
                    x
                  ]
                  x
                ]
                x
              ]
              x
            ]
            x
          ]
        ]
      ]
    )
  )
)