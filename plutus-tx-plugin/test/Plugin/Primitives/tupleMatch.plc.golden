(program
  (let
    (nonrec)
    (datatypebind
      (datatype
        (tyvardecl Tuple2 (fun (type) (fun (type) (type))))
        (tyvardecl a (type)) (tyvardecl b (type))
        Tuple2_match
        (vardecl Tuple2 (fun a (fun b [ [ Tuple2 a ] b ])))
      )
    )
    (lam
      ds
      [ [ Tuple2 (con integer) ] (con integer) ]
      [
        {
          [ { { Tuple2_match (con integer) } (con integer) } ds ] (con integer)
        }
        (lam
          p
          (prod (con integer) (con integer))
          (let
            (nonrec)
            (termbind (strict) (vardecl a (con integer)) (proj 0 p))
            (termbind (strict) (vardecl ds (con integer)) (proj 1 p))
            a
          )
        )
      ]
    )
  )
)